name: Build Matrix

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

  # allows to run the workflow manually from the Actions tab
  workflow_dispatch:
    
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows", artifact: "Windows.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "cl", cxx: "cl",
            build_script: "build.bat",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Ubuntu", artifact: "Linux.tar.xz",
            os: ubuntu-18.04,
            build_type: "Release", cc: "gcc", cxx: "g++",
            build_script: "build.sh",
          }
        - {
            name: "macOS", artifact: "macOS.tar.xz",
            os: macos-11,
            build_type: "Release", cc: "clang", cxx: "clang++",
            build_script: "build.sh",
            developer_dir: "/Applications/Xcode_12.app/Contents/Developer"
          }

    steps:
    - uses: actions/checkout@v1
    - name: Build
      working-directory: ./Build
      run: |
        set(ENV{CC} ${{ matrix.config.cc }})
        set(ENV{CXX} ${{ matrix.config.cxx }})

        if ("${{ runner.os }}" STREQUAL "Windows" AND NOT "x${{ matrix.config.environment_script }}" STREQUAL "x")
          execute_process(
            COMMAND "${{ matrix.config.environment_script }}"
          )
        endif()

        if ("${{ runner.os }}" STREQUAL "macOS" AND NOT "x${{ matrix.config.developer_dir }}" STREQUAL "x")
          set(ENV{DEVELOPER_DIR} ${{ matrix.config.developer_dir }})
        endif()
        
        execute_process(
          COMMAND ./${{ matrix.config.build_script }}
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()


    - name: Pack
      working-directory: ./Dist/${{ matrix.config.build_type }}
      run: cmake -E tar cJfv ../Build/${{ matrix.config.artifact }} .

    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        path: ../Build/${{ matrix.config.artifact }}
        name: ${{ matrix.config.artifact }}
